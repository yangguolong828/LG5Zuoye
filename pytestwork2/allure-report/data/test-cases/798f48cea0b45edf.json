{
  "uid" : "798f48cea0b45edf",
  "name" : "test_div[get_div_datas3]",
  "fullName" : "pytestwork2.test_calc_new.TestCalc#test_div",
  "historyId" : "5a5fc454f2e095c474c410d1201f3db2",
  "time" : {
    "start" : 1609517343048,
    "stop" : 1609517343048,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 1.5 == 0.1",
  "statusTrace" : "self = <test_calc_new.TestCalc object at 0x7f25447e0610>, get_calc = <pythoncode.calculator.Calculator object at 0x7f25447b1310>\nget_div_datas = [0.3, 0.2, 0.1]\n\n    @pytest.mark.run(order=4)\n    # 测试div函数\n    def test_div(self, get_calc, get_div_datas):\n        try:\n            # 调用div函数，返回的结果保存在result里面\n            result = get_calc.div(get_div_datas[0], get_div_datas[1])\n            if isinstance(result, float):\n                result = round(result,2)\n        except Exception as e:\n            print(e)\n        #判断result结果是否等于期望的值\n>       assert result == get_div_datas[2]\nE       assert 1.5 == 0.1\n\ntest_calc_new.py:33: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_div_datas",
    "time" : {
      "start" : 1609517343047,
      "stop" : 1609517343047,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_calc",
    "time" : {
      "start" : 1609517342989,
      "stop" : 1609517342989,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 1.5 == 0.1",
    "statusTrace" : "self = <test_calc_new.TestCalc object at 0x7f25447e0610>, get_calc = <pythoncode.calculator.Calculator object at 0x7f25447b1310>\nget_div_datas = [0.3, 0.2, 0.1]\n\n    @pytest.mark.run(order=4)\n    # 测试div函数\n    def test_div(self, get_calc, get_div_datas):\n        try:\n            # 调用div函数，返回的结果保存在result里面\n            result = get_calc.div(get_div_datas[0], get_div_datas[1])\n            if isinstance(result, float):\n                result = round(result,2)\n        except Exception as e:\n            print(e)\n        #判断result结果是否等于期望的值\n>       assert result == get_div_datas[2]\nE       assert 1.5 == 0.1\n\ntest_calc_new.py:33: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9667ba6317a8d656",
      "name" : "stdout",
      "source" : "9667ba6317a8d656.txt",
      "type" : "text/plain",
      "size" : 76
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_div_datas::0",
    "time" : {
      "start" : 1609517343053,
      "stop" : 1609517343053,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "run(order=4)"
  }, {
    "name" : "parentSuite",
    "value" : "pytestwork2"
  }, {
    "name" : "suite",
    "value" : "test_calc_new"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "ygl-virtual-machine"
  }, {
    "name" : "thread",
    "value" : "16108-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "pytestwork2.test_calc_new"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "get_div_datas",
    "value" : "[0.3, 0.2, 0.1]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=4)" ]
  },
  "source" : "798f48cea0b45edf.json",
  "parameterValues" : [ "[0.3, 0.2, 0.1]" ]
}